<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="heu.iot.Dao.EmploeeMapper">
  <resultMap id="BaseResultMap" type="heu.iot.Model.Emploee">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="priv" jdbcType="INTEGER" property="priv" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="tel" jdbcType="VARCHAR" property="tel" />
    <result column="pic" jdbcType="VARCHAR" property="pic" />
    <result column="introduce" jdbcType="VARCHAR" property="introduce" />
    <result column="active" jdbcType="INTEGER" property="active" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, password, priv, email, tel, pic, introduce, active
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from emploee
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="checkPassword" parameterType="map" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    from emploee
    where id = #{id,jdbcType=INTEGER} and password = #{password,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from emploee
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="heu.iot.Model.Emploee">
    insert into emploee (id, name, password, 
      priv, email, tel, pic, 
      introduce, active)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{priv,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR}, #{pic,jdbcType=VARCHAR}, 
      #{introduce,jdbcType=VARCHAR}, #{active,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="heu.iot.Model.Emploee">
    insert into emploee
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="priv != null">
        priv,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="tel != null">
        tel,
      </if>
      <if test="pic != null">
        pic,
      </if>
      <if test="introduce != null">
        introduce,
      </if>
      <if test="active != null">
        active,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="priv != null">
        #{priv,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="pic != null">
        #{pic,jdbcType=VARCHAR},
      </if>
      <if test="introduce != null">
        #{introduce,jdbcType=VARCHAR},
      </if>
      <if test="active != null">
        #{active,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="heu.iot.Model.Emploee">
    update emploee
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="priv != null">
        priv = #{priv,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="pic != null">
        pic = #{pic,jdbcType=VARCHAR},
      </if>
      <if test="introduce != null">
        introduce = #{introduce,jdbcType=VARCHAR},
      </if>
      <if test="active != null">
        active = #{active,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="heu.iot.Model.Emploee">
    update emploee
    set name = #{name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      priv = #{priv,jdbcType=INTEGER},
      email = #{email,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=VARCHAR},
      pic = #{pic,jdbcType=VARCHAR},
      introduce = #{introduce,jdbcType=VARCHAR},
      active = #{active,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updatePassword" parameterType="map">
    update emploee
    set password = #{password,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER} and password = #{origin,jdbcType=VARCHAR}
  </update>
</mapper>