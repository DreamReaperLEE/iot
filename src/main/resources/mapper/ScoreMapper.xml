<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="heu.iot.Dao.ScoreMapper">
  <resultMap id="BaseResultMap" type="heu.iot.Model.Score">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="sid" jdbcType="INTEGER" property="sid" />
    <result column="pid" jdbcType="INTEGER" property="pid" />
    <result column="detail" jdbcType="VARCHAR" property="detail" />
    <result column="score" jdbcType="REAL" property="score" />
  </resultMap>
  <sql id="Base_Column_List">
    id, sid, pid, detail, score
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from score
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="countExamNum" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select
    count(pid)
    from score
    where sid = #{sid,jdbcType=INTEGER}
  </select>
  <select id="selectByStudentId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from score
    where sid = #{sid,jdbcType=INTEGER}
  </select>

  <select id="selectByPid" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from score
    where pid = #{pid,jdbcType=INTEGER}
  </select>

  <select id="selectBySidPid" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from score
    where sid = #{sid,jdbcType=INTEGER} and pid= #{pid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from score
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="heu.iot.Model.Score">
    insert into score (id, sid, pid, 
      detail, score)
    values (#{id,jdbcType=INTEGER}, #{sid,jdbcType=INTEGER}, #{pid,jdbcType=INTEGER}, 
      #{detail,jdbcType=VARCHAR}, #{score,jdbcType=REAL})
  </insert>
  <insert id="insertSelective" parameterType="heu.iot.Model.Score">
    insert into score
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="sid != null">
        sid,
      </if>
      <if test="pid != null">
        pid,
      </if>
      <if test="detail != null">
        detail,
      </if>
      <if test="score != null">
        score,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="sid != null">
        #{sid,jdbcType=INTEGER},
      </if>
      <if test="pid != null">
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="detail != null">
        #{detail,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        #{score,jdbcType=REAL},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="heu.iot.Model.Score">
    update score
    <set>
      <if test="sid != null">
        sid = #{sid,jdbcType=INTEGER},
      </if>
      <if test="pid != null">
        pid = #{pid,jdbcType=INTEGER},
      </if>
      <if test="detail != null">
        detail = #{detail,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=REAL},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updatePaper" parameterType="heu.iot.Model.Score">
    update score
    <set>
      <if test="detail != null">
        detail = #{detail,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=REAL},
      </if>
    </set>
    where sid = #{sid,jdbcType=INTEGER} and pid=#{pid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="heu.iot.Model.Score">
    update score
    set sid = #{sid,jdbcType=INTEGER},
      pid = #{pid,jdbcType=INTEGER},
      detail = #{detail,jdbcType=VARCHAR},
      score = #{score,jdbcType=REAL}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>